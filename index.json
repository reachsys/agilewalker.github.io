[{"content":" 敏捷障碍清单  ","description":"May 2020","id":0,"section":"updates","tags":null,"title":"May 2020","uri":"https://www.51scrum.com/updates/2020_may/"},{"content":"Markdown here\n","description":"test post","id":1,"section":"updates","tags":null,"title":"May 2019","uri":"https://www.51scrum.com/updates/2019_may/"},{"content":"Markdown here\n","description":"test post","id":2,"section":"updates","tags":null,"title":"April 2019","uri":"https://www.51scrum.com/updates/2019_april/"},{"content":"Markdown here\n","description":"test post","id":3,"section":"updates","tags":null,"title":"March 2019","uri":"https://www.51scrum.com/updates/2019_march/"},{"content":"Markdown here\n","description":"test post","id":4,"section":"updates","tags":null,"title":"February 2019","uri":"https://www.51scrum.com/updates/2019_february/"},{"content":"Markdown here\n","description":"test post","id":5,"section":"updates","tags":null,"title":"January 2019","uri":"https://www.51scrum.com/updates/2019_january/"},{"content":" 原创连载译文 Fixing Your Scrum (转载请联系捷伴行)\n Chapter 3 第3章 Breaking Bad Scrum with a Value-Driven Approach 以价值驱动的方法破除不良的Scrum Knowing what we value is important. Bad Scrum thrives in environments where intent isn’t clear, values are implicit instead of explicit, and old ways of working take precedence over innovation. But if you don’t know the Scrum values, how can you begin to fix your Scrum? Simple: you can’t. So let’s take a quick tour of the Scrum values to make sure they’re fresh in your mind.\n了解我们的价值观很重要。在意图不清晰，价值观是隐性而非显性的环境中，不良的Scrum蓬勃发展，而且旧的工作方式凌驾于创新之上。 然而，如果不了解Scrum价值观，怎么能开始修复Scrum？ 很简单：不能。 因此，让我们快速浏览一下Scrum价值观，这样可以确保Scrum价值观在你的意识中还记忆犹新。\nReviewing the Scrum Values 重审Scrum价值观 Scrum is a simple framework. There are three roles, five events, and three artifacts. Teams can get up and running very quickly. But software development is complex and so are people. When things are going well, the complexity seems manageable. But when stuff starts hitting the fan, bad things can and do happen. These difficult moments are why we need the Scrum values.\nCommitment, focus, openness, respect, and courage are the five Scrum values. Understanding them can lead to better decisions, higher-quality work, and a truly collaborative environment.\nThese values are critical to understanding the “why’’ of Scrum. They act as guideposts when your team gets lost. More importantly, they drive the decisions that impact your daily work. Failing to understand them prevents your team from improving their ability to deliver value.\nScrum是一个简单的框架。 有三个角色，五个活动和三个工件。 团队可以非常快速地启动并运行。 但是软件开发很复杂，人也是如此。 当事情进展顺利时，复杂性似乎可以控制。 但是，当事情开始扑朔迷离时，坏事就可能确实发生。 这些困难时刻是我们需要Scrum价值观的原因。\n承诺，专注，开放，尊重和勇气是Scrum的五个价值观。 理解它们可以导致更好的决策，更高质量的工作以及真正的协作环境。\n这些价值观对于理解“为什么”是Scrum至关重要。 当团队迷路时，它们就充当了路标。 更重要的是，它们推动了影响日常工作的决策。 不理解它们会阻碍团队提高其创造价值的能力。\nHere’s why each value is so vital:\n  Commitment can transform a team. It’s a promise to yourself, your teammates, and your organization to do the very best work you can. If everyone on your Scrum team is committed to delivering a done increment of valuable product each and every sprint, you can accomplish great things together.\n  Focus allows us to do our very best. Valuing focus means that we give people the time they need to think about their work. After all, creativity is hard enough without being constantly interrupted. Allowing development team members to focus just on one product, the current sprint, and the current sprint goal gives them the best chance of succeeding. Encourage the product owner to focus on the future value of the product while you, the Scrum master, focus on upholding Scrum.\n  Openness is the core of transparency, which is what makes Scrum work. If the members of your Scrum team (and the people who work with your team) aren’t open with each other and the wider organization, they can’t solicit honest feedback or adapt their work accordingly. You need to be open and honest, even when you’re struggling or there’s a tough issue to address. If you aren’t, transparency will suffer.\n  Respect creates a feeling of safety. Being open with others can be scary and admitting when you’re stuck is hard, but respect makes these actions easier. A high-performing Scrum team is built on mutual respect, and honest discussions create the safety needed to tackle difficult issues. Respect helps a team gel, grow, and learn together.\n  Courage is the linchpin of the other Scrum values. It takes courage to commit, to focus amid distractions, and to be open to new ideas. And it takes courage and faith in your teammates to count on having respectful interactions when you need to discuss problems.\n  这里就是每个价值观如此重要的原因：\n  承诺可以转变团队。这是对自己，团队成员和组织的承诺，我们将竭尽所能地工作。如果Scrum团队中的每个人都致力于在每一个Sprint中交付完成的有价值的产品增量，我们就可以一起完成伟大的事。\n  专注使我们能够做到最好。重视专注意味着我们给人们时间来思考他们的工作。毕竟，创造是很辛苦的，更不要说被不断打扰了。使开发团队成员仅关注一个产品，当前的Sprint和当前的sprint目标，可以为他们提供最大的成功机会。鼓励产品负责人将精力集中在产品的未来价值上，而你，Scrum Master则专注于做好Scrum。\n  开放是透明性的核心，这正是Scrum发挥作用的原因。如果Scrum团队成员（以及与团队一起工作的人）与彼此以及整个组织不开放，他们将无法征求诚实的反馈或相应地调整他们的工作。即使在苦苦挣扎或遇到棘手的问题，也需要保持开放和诚实。如果不这样做，透明性会受到损害。\n  尊重会带来安全感。与他人保持开放可能会令人恐惧，而在陷入困境时也难以承认，但是尊重会使这些变得容易。高绩效的Scrum团队建立在相互尊重的基础上，诚实的讨论为解决棘手的问题提供了安全保障。尊重可以帮助团队凝聚，成长和共同学习。\n  勇气是其他Scrum价值观的关键。是勇气促成了承诺，在诸多事务中保持专注，并对新思想持开放态度。当需要讨论问题时，团队成员的勇气和信念会促成相互尊重的互动。\n  The Scrum values can guide you through the many obstacles and difficult situations that inevitably arise during software development projects. Without these values, your practices become rote and collaboration feels forced and mechanical. Don’t let that happen to your team.\nLet’s think about specific ways to use the Scrum values to keep your team on track.\nScrum价值观可以指导解决在软件开发项目中不可避免出现的许多障碍和困难情况。没有这些价值观，实践将变得枯燥无味，协作将变得无精打采。 不要让您的团队遇到这种情况。\n让我们思考一下特定方法，可以用Scrum价值观让团队稳步向前。\nUsing the Scrum Values Every Step of the Way 一路随行Scrum价值观 A central theme of this book is how to apply the Scrum values during the many complicated situations you’ll face while playing the game of Scrum. But what do the values mean to you both as an individual and as part of a team?\nWhen your organization first adopts Scrum, the folks on your team may have a wide range of feelings about that change. For example, someone who’s used to being a hero coder may have a hard time adjusting to being equal to all the other developers. And someone who was formerly a project manager (and is now the product owner) may feel like the skills they’ve spent years honing may be irrelevant in Scrum. But hopefully, a lot of your team members will be enthusiastic about the many benefits that Scrum offers and will be excited to start working as a lean, mean software development team.\n本书的中心主题是如何在玩Scrum游戏时遇到的许多复杂情况下应用Scrum价值观。 然而，无论对于个人还是团队，价值观对你意味着什么？\n当组织首次采用Scrum时，团队中的人们可能会对这种变化产生各种各样的感觉。 例如，一个曾经的英雄编码者可能会有段艰难的时间去适应与所有其他开发人员共同工作。 而以前是项目经理（现在是产品负责人）的人可能会觉得，他们花了多年磨练的技能可能在Scrum里没有用武之地了。 单元很多团队成员会对Scrum给到的诸多好处充满热情，并为成为一个精益，均衡的软件开发团队而感到兴奋。\nThe Scrum values give Scrum teams a core set of values that they hold to and live by. Living these values helps team members bring their authentic selves forward and creates the alignment needed for them to do their best work. But for many teams, adopting the Scrum values isn’t quick or automatic. It takes dedication and hard work for a team to establish its own identity and to embrace the Scrum values in a way that works for them.\nAs Scrum masters, part of our role is to help teams discover what they value and how they internalize the Scrum values. Make a point of having your team reflect on the Scrum values during sprint retrospectives or at some other time. The important thing is that these discussions happen.\nScrum价值观为Scrum团队提供了一套他们赖以生存的核心价值观。 践行这些价值观可以帮助团队成员发扬自己的热情，并为他们做好工作提供必要的对齐标准。 但是对于许多团队来说，采用Scrum价值观并不会很快或自动的发生。 团队要建立自我认同并以对他们有用的方式拥抱Scrum价值观，需要积极投入和艰苦的努力。\n作为Scrum Master，我们的部分职责是帮助团队发现他们所重视的价值以及如何将Scrum价值观内化。 强调在Sprint回顾期间或其他时候让团队反思Scrum价值观。 重要的是让这些讨论发生。\nHere are a few powerful questions to ask the team as they explore the Scrum values:\n  Why do courage, commitment, focus, respect, and openness matter? Ask people to give examples of situations where specific values helped them.\n  How do we act on the Scrum values? If your team members aren’t using the values to guide their actions, they risk performing uninspired, mechanical Scrum.\n  What happens when the Scrum values aren’t present on our team? One example: without respect, team members may lack the courage to be open with one another.\n  在团队探索Scrum价值观时，有一些强有力的问题要问团队：\n  为什么勇气，承诺，专注，尊重和开放很重要？ 要求人们举例说明特定价值观对他们有帮助的情况。\n  我们如何按Scrum价值观做事？ 如果团队成员没有使用这些价值观来指导他们的行动，那么他们可能会去冒险做呆板而有无趣的Scrum。\n  当我们的团队中没有体现Scrum价值观时会发生什么？ 一个例子：在没有尊重的情况下，团队成员可能缺乏彼此开放的勇气。\n  Once you feel that your team is aligned on the Scrum values, you can use the values as a decision-making tool. Teams inevitably get stuck. Decisions about a process, tool, architecture, or team practice can get complicated quickly. As the Scrum master, try to recognize when the team is stuck and use these powerful questions to help focus the discussion and reach a consensus.\n一旦你觉得团队在Scrum价值观上保持一致，就可以将这些价值观用作决策工具。 团队难免陷入困境。 有关流程，工具，体系结构或团队实践的决策可能会很快变得复杂。 作为Scrum Master，尝试发现当团队陷入困境时刻，并使用这些有力的问题来帮助集中讨论并达成共识。\nOften, the team will make a decision based on the Scrum values and move forward with its work. But sometimes, problems will arise that truly challenge the team. Your Scrum team will ignore past agreements, violate the Scrum values, and not meet their commitments. This is normal, but when it happens, you need to take the opportunity to inspect and adapt the team’s practices based on this experience.\n通常，团队会根据Scrum价值观做出决定，并继续进行工作。 但是有时会出现真正挑战团队的问题。 Scrum团队将忽视过去的协议，违反Scrum价值观，并且无法兑现承诺。 这是正常现象，但是一旦发生，需要趁此机会根据这种经验来检查和调整团队的实践。\nThe sprint retrospective, which we discuss in detail in the last chapter of this book, is a great opportunity to explore how to help a team that’s struggling with the Scrum values. This work can be difficult, but it’s important to help team members come together and align toward a common goal.\n我们将在本书的最后一章中详细讨论了Sprint回顾，这是探讨如何帮助陷入Scrum价值观困境的团队的很棒的时机。 这项工作可能很困难，但重要的是要帮助团队成员团结一致并朝着共同的目标迈进。\nAfter your team hits a rough patch, ask the following questions (or ones like these) during the sprint retrospective, as your team works to regain alignment and adapt its understanding of the Scrum values:\n  When is it difficult to live the values of courage, commitment, focus, respect, or openness?\n  What gets easier when we embrace the Scrum values?\n  Which Scrum value(s) helped us the most this sprint?\n  Is there a specific value that you think we especially need to work on within the team?\n  当团队遇到困难时，请在Sprint回顾期间提出以下问题（或类似的问题），让团队将努力恢复一致并适应对Scrum价值观的理解：\n  何时难以体现出勇气，承诺，专注，尊重或开放的价值观？\n  当我们接受Scrum价值观时，什么会变得更容易些？\n  哪个Scrum价值观最有助于我们完成本次Sprint？\n  你认为我们团队中需要特别重视的特定价值观吗？\n  After this important discussion, you need to turn the insights you glean from it into actionable product backlog items for continuous improvement. That will help the team be accountable for their culture and the way they work together. Improving on how we embrace the Scrum values and making the improvements actionable is how we grow as both individuals and as a team. So let’s discuss some ways to turn your insights into actions.\n这个重要的讨论之后，我们需要将从中获得的见解转化为可行的产品待办事项，用以进行持续改进。 这将有助于团队对他们的文化和合作方式负起责任。 提高我们对Scrum价值观的接受程度，以及我们如何以个人和团队的方式成长使之付诸实践。 因此，让我们讨论一些将见解转化为行动的方法。\nThe Scrum Values in Action 实战Scrum价值观 “I wish we could talk about our small failures instead of having to wait until they’re major issues.”\nThese memorable words came from a colleague of Ryan’s a number of years ago, and they still resonate with Ryan today. We were working with Scrum teams, but this colleague didn’t feel safe discussing small failures with anyone.\nLarge issues, on the other hand, were no problem. When a big, obvious problem reared its ugly head, leadership would rally the troops and teams would work late nights and into the weekends to solve them. At the end of one of these “fire drills,” the managers would talk about the team’s great effort, and leadership would be pleased with the team’s commitment to delivering what they promised.\n“我真希望我们之前可以谈论我们的小小的失败，而不必等到它们成为大大的问题。”\n这些令人难忘的话来自几年前瑞恩（Ryan）的一位同事，直到今天仍然引起瑞恩（Ryan）的共鸣。 我们当时正在与Scrum团队合作，但这位同事与任何人讨论小失败的时候都会感到不安全。\n另一方面，大问题不是问题。当一个大而明显的问题浮出水面时，领导层将召集部队，并在深夜和周末工作以解决问题。 在这些“消防演习”之一结束的时候，经理们将谈论团队的巨大努力，而领导层将对团队对兑现承诺的投入感到满意。\nThe lesson: Mentioning small mistakes could get you reprimanded or blamed for causing them, whereas working late to solve major issues could get you promoted (even though these big problems could have been avoided altogether if they had been fixed when they were still small issues\u0026hellip;)\nThis approach (not being transparent when small issues arise) isn’t Scrum—not even a little. But it’s still common, even on Scrum teams.\nIronically, being able to respond to small failures is often what makes the overhead and expense of adopting Scrum worth the cost and time it takes to get good at Scrum. But organizations where people don’t feel safe discussing small issues miss out on this huge benefit. Let’s use Scrum and the Scrum values to frame this idea a little more clearly.\n教训：提及小错误可能会导致受到谴责或责备，而后期解决重大问题则可以得到提拔（即使这些大问题在它们还是小问题的时候如果得到解决，其实是可以完全避免的。）\n这种方法（出现小问题时不透明）不是Scrum，完全不是。 但是，即使在Scrum团队中，仍然很常见。\n具有讽刺意味的是，能够对小失败做出响应通常会产生采用Scrum的开销和费用，即熟练掌握Scrum所需的成本和时间。但是，在人们讨论小问题时会感到不安全的组织就会错失这种巨大的好处。 让我们用Scrum和Scrum价值观来更清晰地阐述这一点。\nSprint planning, which we cover in Chapter 10, Sprint Planning, is about figuring out which product backlog items can fit into a sprint, and then decomposing the first few stories into smaller pieces. You’re intentionally making your work small so that if you do make a mistake, miss a dependency, make the wrong assumption, or flat out mess up, it’s small and correctable.\nThe daily scrum, which we discuss in Chapter 12, Reclaiming the Daily Scrum, is for coordinating a day’s worth of work to make sure that the development team is on track to deliver on their sprint goal by the end of the sprint. This micro-planning event is all about exploring opportunities and delivering on them early, to keep the project moving forward.\nDuring the sprint review, which is the subject of Chapter 14, The Sprint Review, the Scrum team collaborates with stakeholders to inspect the latest increment of working software against the product backlog to see if any changes are needed, based on what the team learned during the preceding sprint. Delaying (or not holding) this event can cause the team to continue down an incorrect path.\n我们将在第10章“ Sprint规划”中介绍Sprint规划，它涉及确定哪些产品待办事项可以放入Sprint，然后将前几个故事分解为较小的部分。我们有意将工作拆分得很小，这样一来，如果确实犯了一个错误，错过了一个依赖项，做出了错误的假设，或者弄得一团糟，它很小，很容易纠正。\n我们将在第12章“收获每日Scrum”中讨论每日Scrum，它是为了协调一天的工作量，以确保开发团队能够在Sprint结束之前实现其Sprint目标。这项微计划活动的目的是探索机会并尽早交付，以保持项目的进展。\n在第14章“Sprint评审”的Sprint评审过程中，Scrum团队与利益相关者合作，根据产品待办清单检查最新的可工作软件增量，根据团队的在前一个Sprint中情况，查看是否需要变更。延迟（或不举行）这个活动可能导致团队沿着错误的方向继续前进。\nThe sprint retrospective is the perfect opportunity for the team to inspect how they did their work and come up with experiments that can help them improve in future sprints. During this event, it’s essential for everyone to be able to talk about small failures and ways to improve, so that the team can advance its Scrum practices.\nScrum is designed to keep failures small and manageable, making risk management a built-in feature of the framework. If your team can’t talk about its small failures openly, that increases the risk that big troubles are around the corner.\nThis is why openness, courage, and commitment are essential for Scrum teams. Being open about what’s going on, having the courage to speak the truth to management, and being committed to delivering high-quality products are all vital to catching problems early—while they’re still small.\nTake time to discuss small failures with your team and encourage the great learning opportunities that they can bring. After all, these opportunities are one of the major rewards of adopting Scrum.\nSprint回顾是团队检查自己的工作方式并进行实验以帮助他们改进未来冲刺的绝佳时机。在这个活动中，每个人都必须能够谈论小失败和改进方法，以便团队可以改进Scrum实践。\nScrum旨在将失败保持在较小范围内并且易于管理，从而内建使风险管理于框架之中。如果团队无法公开谈论其小失败，那将增加大麻烦来临的风险。\n这就是为什么开放，勇气和承诺对于Scrum团队至关重要。 畅所欲言，勇于向管理层讲真话，并致力于提供高质量的产品，对于尽早发现问题（当它们还很小的时候）至关重要。\n花一些时间与团队讨论小失败，并鼓励他们推动巨大的学习机会。毕竟，这些机会是采用Scrum的主要回报之一。\nCoach’s Corner 教练园地 Given the importance of the Scrum values, you should make a point to coach your team on them regularly. Here are two ways you can help your team get more familiar with the Scrum values:\n  During your next sprint retrospective, write each value across the top of a whiteboard. Then ask the team to come up with ways that they applied each value during the last sprint. You should also ask how the values were violated. Use the responses to generate a discussion about each value. Over time, this will create a common understanding about how each value applies to the team. If your team is struggling with embracing the Scrum values, you can perform this exercise during every retrospective. If, on the other hand, your team is consistently working well together, you may not need to perform it very often (though you should still do it occasionally, just to keep the values fresh in everyone’s minds.)\n  If your team is more action-oriented, you can try framing each Scrum value as a product backlog item in the product backlog. Here is a story format you can use to get you started: “As a __, I want to ____ in order to _____.” Use this format to make these “value stories’’ actionable. For example, “As a Scrum team member, I want to show up on time to Scrum events in order to show my teammates that I respect them.”\n  考虑到Scrum价值观的重要性，应该定期就这些价值观指导团队。可以通过以下两种方法来帮助团队更熟悉Scrum价值观：\n  在下一个Sprint回顾期间，将每个价值观写在白板的顶部。然后要求团队说出在上一次Sprint中应用每个价值观的方法。还应该询问当时如何违反了这些价值观。用团队的响应来产生关于每个价值观的讨论。随着时间的流逝，这将使人们对每种价值如何应用于团队形成共识。如果团队正在努力拥抱Scrum价值观，则可以在每次回顾期间做这个练习。另一方面，如果团队始终保持良好的合作关系，就可能不需要经常做（尽管仍然应该偶尔做，只是为了让每个人对价值观记忆犹新。）\n  如果团队更注重行动，则可以尝试将每个Scrum价值观放到产品待办清单中的产品待办事项。这是可以用来入门的故事格式：“作为 ，我想 以便于 ____。”使用这种格式可以使这些“有价值的故事”切实可行。例如，“作为Scrum团队成员，我想按时出现在Scrum活动中，以便于向队友表明我尊重他们。”\n  When you decide to adopt Scrum, you accept not only the practices but also the Scrum values. Now that you understand them a bit better, you can focus on applying them to your daily activities. Over time, you should see improvements not only in the quality of the product your team is building, but also in how your team members interact with one another.\nWe’re ready to turn our attention to the various Scrum roles, events, and artifacts. We’re going to start with the product owner, who defines the team’s vision and validates that what the development team delivers is actually what customers and stakeholders want. This role is vital because, without a clear vision, the team will lack direction and won’t understand why they’re building their product. In the next chapter, you’ll learn how commitment and focus help a product owner determine the best direction for a product.\n当决定采用Scrum时，我们不仅接受实践，而且接受Scrum价值观。 现在，我们对它们有了更好的理解，可以集中精力将其应用于日常活动。随着时间的流逝，不仅可以看到团队正在开发的产品质量上的改进，而且还能看到团队成员之间如何互动。\n我们准备将注意力转移到Scrum的各种角色，活动和工件上。 我们将从产品负责人开始，产品负责人定义了团队的愿景，并验证开发团队提供的实际上是客户和利益相关者想要的东西。 这个角色至关重要，因为如果没有清晰的愿景，团队将缺乏方向，也不会明白他们为什么要开发自己的产品。 在下一章中，将学习如何致力于和专注于产品负责人确定产品的最佳方向。\n-- * End of Chapter 3 Breaking Bad Scrum with a Value-Driven Approach *--\n","description":"Breaking Bad Scrum with a Value-Driven Approach","id":6,"section":"books","tags":null,"title":"以价值驱动的方法破除不良的Scrum","uri":"https://www.51scrum.com/books/fixing-your-scrum/ch3.-breaking-bad-scrum-with-a-value-driven-approachfixing-your-scrum/"},{"content":" 原创连载译文 Fixing Your Scrum (转载请联系捷伴行)\n Chapter 2 第2章 Why Scrum Goes Bad 为什么Scrum会变质 Scrum itself doesn’t go bad—it’s the ways that organizations implement it that can be problematic. We frequently see people changing the Scrum framework to fit their organization rather than the organization itself changing. Changing an organization can be slow and frustrating, but the whole point of adopting Scrum is to switch to a more efficient and empowering way of creating products, so change is a must.\nWe’ve experienced, and sometimes even promoted, many of the Scrum anti-patterns that we’ll describe in this book. The root cause of these anti-patterns is typically policies that have been in place since long before the company adopted Scrum. Such longstanding policies can sometimes make what Scrum brings to light seem counterintuitive. For example, the idea of having a dedicated product owner who is fully empowered to make all decisions about a product can feel really foreign to many organizations, but having someone in that role is crucial to the success of any Scrum team.\nScrum本身不会让事情变糟，而是组织实施它的方式可能会出现问题。我们常常看到人们更改Scrum框架以适应组织，而不是改变组织自身。改变组织可能会很慢并让人感到沮丧，但是采用Scrum的唯一目的是要转变到一种更高效，授权的方式来创造产品，所以改变是必然的。\n我们将在本书中介绍很多Scrum反模式，这些我们经历过，有时甚至还被推广。这些反模式的根本原因通常是在公司采用Scrum很久之前就存在的政策。这种长期的政策有时会使Scrum暴露出来的东西似乎违反直觉。例如，设置一个完全有权对产品做出所有决定的专门产品负责人的想法对于许多组织来说确实很陌生，然而让某个人担任这一角色对于任何Scrum团队的成功至关重要。\nAs Scrum masters, part of our service is to the organization, and that means one aspect of our role is making sure the organization is fully embracing the Scrum way of doing things—which may require changes. Organizational change can come in many forms, such as:\n  Working with HR to redefine job roles.\n  Working with Finance to understand how budgeting processes impact the way teams work.\n  Helping Management adopt agile leadership principles.\n  Removing the divide between IT and business partners.\n  In order to know which change(s) your organization needs to make, you first need to understand the underlying causes of bad Scrum.\n作为Scrum master，我们的一部分职责是为组织提供服务，这意味着我们角色的一方面是确保组织完全采用Scrum的做事方式，这可能需要一些改变。 组织的改变可以有多种形式，例如：\n  与人力资源部门一起重新定义工作角色。\n  与财务部门合作，了解预算流程如何影响团队的工作方式。\n  帮助管理层采用敏捷领导力原则。\n  消除IT和业务伙伴之间的鸿沟。\n  为了知道组织需要进行哪些改变，首先需要明白这些不良的Scrum背后的根本原因。\nTurning Scrum into Best Practices 把Scrum当做最佳实践 Ryan once worked with an organization whose Project Management Office created a 500-page Scrum manual that detailed the processes and “best” practices that all their Scrum teams had to follow. Not surprisingly, these “Scrum” best practices looked a lot like the old waterfall processes the company used prior to adopting Scrum. We aren’t against teams creating their own practices within the Scrum framework—that’s actually a good sign of a team that’s working well together. But we’ve seen many organizations take the idea of “best” practices too far (like with the 500-page manual). A best practice is a practice you adopt and use everywhere all the time as the best way to do your work. But the type of work that Scrum teams do is typically too complex for any particular practice to always be the best approach, so there’s no such thing as a best practice in Scrum.\nRyan曾经与一个组织合作，该组织的项目管理办公室创建了500页的Scrum手册，其中详细说明了所有 Scrum团队必须遵循的流程和“最佳”实践。 毫不奇怪，这些“ Scrum”最佳实践看起来很像公司在采用Scrum之前使用的旧瀑布式流程。 我们不反对团队在Scrum框架下创建自己的实践，这实际上是团队合作良好的一个好兆头。 然而我们已经看到许多组织对“最佳”实践的想法做得过头了（就像这500页的手册）。 最佳实践是被采用的，作为完成工作的最佳方法，在任何时候，任何场合可以使用。 不过对于任何特定的实践来说，Scrum团队所做的工作类型通常都太复杂了，以至于不能总是成为最佳方法，所以Scrum中没有所谓的最佳实践。\nAt the other end of the “Scrum as a best practice” spectrum is the tendency to modify the Scrum framework itself. This can be very tempting, but don’t do it. When a team only uses part of the framework, they lose most of the benefits of working with Scrum. What do these framework changes look like? Here are some examples:\nTreating every Scrum event as optional. We have enough meetings as it is!\nSkipping the sprint review when there isn’t any work to show. I mean, it’s just a demo, isn’t it?\nHolding the daily scrum biweekly. Just because it’s called the daily scrum doesn’t mean we have to do it every day, right?\nCanceling the sprint retrospective in favor of getting more work done. Because who has time to improve?\nIgnoring the Scrum event time boxes. I mean, who doesn’t love a 45-minute daily scrum? (Spoiler: no one loves it.)\n把“Scrum作为最佳实践”的另一个极端，是倾向于修改Scrum框架本身。 这可能很诱人，但别这么干。 如果团队只用框架的一部分，他们会失去使用完整Scrum的大部分好处。对框架的改变是什么样的？ 这里有些例子：\n  将每个Scrum活动视为可选的。 我们有足够的会议！\n  当没有要展示的工作时，跳过Sprint评审。 我的意思是，这只是一个演示，不是吗？\n  每两周举行一次每日Scrum。 仅仅因为它被称为“每日Scrum”并不意味着我们每天都必须这样做，对吗？\n  取消Sprint回顾，就可以完成更多工作。 因为谁有时间改善？\n  忽略Scrum活动的时间盒子。 我的意思是，谁不喜欢每天45分钟的讨论？\n  Scrum is a collaborative framework that teams work within to help them deliver working software frequently. Your team needs to deliver an increment every sprint so they can determine whether they’ve met stakeholder expectations, whether customers actually want the product that they’ve delivered, whether they’ve created value at a reasonable cost and timeframe, and whether they’re using the appropriate technologies. This feedback loop that the Scrum framework implements (between the Scrum team, stakeholders, and customers) is an example of risk reduction.\nScrum是团队的协作框架，帮助他们经常交付可用的软件。 团队需要在每个Sprint上交付增量，这样他们可以确定是否满足利益相关者的期望，客户是否真正想要他们交付的产品，他们是否已经在合理的成本和时间范围内创造了价值，以及他们是否在使用适当的技术。 Scrum框架实现的反馈循环（在Scrum团队，利益相关者和客户之间）是降低风险的一个示例。\nAlong the way, you and your teams will discover that it’s really hard to deliver product increments. Changes will be required at all levels of your organization, from the Scrum team all the way up and down the org chart. Changing the Scrum framework, ignoring the rules of Scrum, and simply swapping out old jargon for new- and-improved terms won’t get you there.\n在此过程中，你和团队将发现很难交付增量产品。改变需要在组织的各个层级进行，从Scrum团队向上或向下的组织结构图。 改变Scrum框架，忽略Scrum规则，仅将旧术语换成新的和改进的条款并不能有所帮助。\nWhen an organization is reluctant to fully adopt Scrum without making lots of customizations, we’ve found it useful to make a clear distinction between the Scrum framework and other complementary practices that the Scrum team is using. Often in our consulting engagements, we spend most of our time tearing out complementary practices in order to simplify things and firmly establish the core Scrum elements. Scrum teams should strive to get the basic elements of the framework solidly in place before they add any additional practices that may be needed.\n当一个组织不愿全盘采用没有经过大量定制的Scrum时，我们发现在Scrum框架和Scrum团队正在使用的其他补充实践之间进行清晰区分是很有用的。 通常，在我们的咨询服务中，花费大部分时间来完善补充做法，以简化工作并牢固地建立核心Scrum要素。 在添加任何可能需要的其他实践之前，Scrum团队应该努力稳固地掌握框架的基本要素。\nWhere does your team stand in terms of having the basic Scrum framework elements in place? To find out, try this simple exercise alone or with your team:\n  Write each element of the Scrum framework on a separate sticky note: Product Owner, Scrum Master, Development Team, Sprint, Sprint Planning, Daily Scrum, Sprint Review, Sprint Retrospective, Product Backlog, Sprint Backlog, and Increment.\n  Next, grab a different color sticky note and write down each complementary practice your team uses (one per sticky note), such as story points, poker planning, or sprint burndown charts.\n  Now that you have a list of the Scrum elements and a list of the complementary practices, on every sticky note, write a score from 1 (we aren’t doing this at all) to 5 (we’ve mastered this).\n  Finally, reflect on how you can get every Scrum element sticky to a 5. Are you spending too much time and effort on complementary practices? Are any complementary practices prohibiting a Scrum element from getting to a 5?\n  就掌握基本的Scrum框架元素而言，团队处于哪个程度？要找出答案，请尝试单独或与团队一起进行以下简单练习：\n  在单独的便笺上写出Scrum框架的每个要素：产品负责人，Scrum Master，开发团队，Sprint，Sprint计划，每日Scrum，Sprint评审，Sprint回顾，产品待办事项列表，Sprint待办事项列表和增量。\n  接下来，拿一个不同颜色的便笺，写下团队使用的每种补充实践（每个便笺一个），例如故事点，扑克规划或Sprint燃尽图。\n  现在，在每个便笺上已经有了Scrum要素的列表和补充实践的列表，写下一个分数（从1（根本没有做）到5（已经掌握了））。\n  最后，思考一下如何使每个Scrum要素达到5分。在补充实践上花费了太多时间和精力吗？是否有任何补充实践阻碍了Scrum要素达到5分？\n  Best practices work well for work that is repeatable or can be standardized, but Scrum is designed for solving complex problems. All too often, we cling to best practices as a way to feel like we know exactly what’s going to happen. Wouldn’t it be great if we could follow a 100-step process (filled with best practices) and always get the results that we expect? However, complex work doesn’t play out that way. We need, instead, to be transparent both within the Scrum team and to the wider organization, to have frequent opportunities to inspect and evaluate our work, and to have the ability to make adaptations as needed. Scrum is a simple framework with 11 elements that provide a means of using empiricism (transparency, inspection, and adaptation) to your advantage. Adding complementary practices to Scrum may enhance the framework, but you must be doing Scrum well before you adopt any additional practices.\n最佳实践对于可重复或可以标准化的工作效果很好，然而Scrum是为了解决复杂的问题。 很多时候，我们坚持采用最佳实践，觉得好像自己完全知道会发生什么。 如果我们可以遵循一个100步骤的过程（含有最佳实践）并始终获得我们期望的结果，那不是很好吗？ 但是，复杂的工作并不会以这种方式呈现。 相反，我们需要在Scrum团队内部和整个组织内部保持透明，并有频繁的机会检查和评估我们的工作，并具有根据需要进行调整的能力。 Scrum是一个简单的框架，包含11个元素，可提供使用经验主义（透明度，检查和调整）的方法。 在Scrum中添加补充实践可能会增强框架，但是在采用任何其他实践之前，Scrum必须做得已经很好。\nLacking Goals 缺乏目标 Want to know the best way to demotivate a development team? Keep them from seeing how their work impacts your customers. Likewise, it’s demotivating for a Scrum team when they don’t know how their product relates to the overall mission of the company. This misalignment of value and purpose can make it difficult for a Scrum team to have their own clear goals that reflect larger organizational goals. This cascades all the way down to sprint goals—and without sprint goals, the development team lacks urgency and inspiration. In that situation, the developers become backlog lumberjacks: they chop through features and stories without really understanding why they’re doing that work.\n想知道挫伤开发团队积极性的最佳方法么？就是别让他们看到他们的工作如何影响客户。 同样，当Scrum团队不知道他们的产品与公司的整体使命有何关系时，也激励不了他们。 价值和目的错位会使Scrum团队很难拥自己的清晰目标，并思考更大的组织目标。 一直到Sprint目标都是这样，没有Sprint目标，开发团队缺乏紧迫性和灵感。 在这种情况下，开发人员就像是待办事项的伐木工人：他们在不真正了解为什么要进行一项工作的情况下砍伐（完成）功能和故事。\nWhat does this look like in practice?\n Carrying work over across multiple sprints becomes the norm. We’ll finish that PBI in the next sprint, right? Your team actually starts using a sprint goal (hurray!) but it’s basically just “finish the sprint backlog” (boo!). Quality suffers. We don’t know why we’re doing the work or who it helps, so who cares how good it is?  实践中会成什么样呢？\n  跨多个Sprint进行一项工作成为常态。\n  我们将在“下一个”Sprint中完成该PBI，对吗？\n  团队实际上开始使用Sprint目标，但基本上只是“完成Sprint待办事项”。\n  质量受损。 我们不知道为什么要从事这项工作或对谁有帮助，那么谁在乎它有多好呢？\n  Stakeholders get upset. A lack of a product vision equals a vacuum of product leadership that ultimately gets filled by the development team. And there is no way for developers to magically know what customers want, especially if they do not know how their work is impacting customers.\n利益相关者会不高兴。 缺乏产品愿景等于产品领导力的真空，这最终会由开发团队来填补。开发人员不能像变魔术一样地知道客户想要什么，特别是当他们不知道他们的工作如何影响客户的时候。\nScrum teams work best when they are aligned with the organization’s goals and customers’ needs. Leadership sets the high-level goals for a company, product visions serve these goals and the customers’ needs, and sprint goals keep Scrum teams aligned with the customers. When this alignment is in place, the Scrum team has purpose. Purpose is a powerful tool that can bring a team together and keep them inspired and motivated to deliver great products.\n当Scrum团队符合组织的目标和客户需求时，他们的工作效率最高。 领导层为公司设定了高层目标，产品愿景为这些目标和客户需求服务，Sprint目标使Scrum团队与客户保持一致。 当达成一致时，Scrum团队便有了目标。 目标是一个强大的工具，可以使团队团结起来，并激发他们的灵感和动力，以交付出色的产品。\nDoes your Scrum team lack goals? This happens when executives fail to advertise company goals clearly or fail to communicate changes to company goals. Goals, from the organizational level cascading all the way down to a Scrum team’s sprint goal, should be measurable and customer-focused. Work with your product owner to clearly understand why your team is doing the work they’re doing. Trace it all the way up to the company’s goals and mission.\nScrum团队是否缺乏目标？ 当管理层无法清晰地宣传公司目标或无法传达对公司目标的改变时，就会发生这种情况。 从组织级别一直到Scrum团队的Sprint目标，目标应该是可衡量的并且以客户为中心。 与产品负责人一起清楚地理解团队为什么从事他们正在做的工作。追溯这些工作到公司的具体目标和使命。\nDuring your next retrospective, see if your team can make the connection between their sprint goal and a corporate goal. Ask the product owner and development team to reflect on the sprint goal from a recently completed sprint and have them connect this goal to the product vision, and ultimately to a corporate goal. Making these connections explicit can help the Scrum team stay focused on the impact of their work.\n在下一次回顾中，观察团队是否可以在Sprint目标和公司目标之间建立联系。 要求产品负责人和开发团队对最近完成的Sprint中的Sprint目标进行反思，并使他们将该目标与产品愿景，最终与公司目标联系起来。 明确这些联系可以帮助Scrum团队专注于他们的工作所产生的影响。\nTaylorism Creeping Back in We’ve worked in countless organizations where people hold strong beliefs about product development that aren’t compatible with the proper use of the Scrum framework. These beliefs are often held both by people in various levels of management and among the people doing the work. These beliefs are often overlooked and rarely discussed because the trust needed to talk about them is lacking. To make matters more difficult, many of these beliefs are deeply rooted in corporate culture and are difficult to work through.\n我们在无数的组织中工作，人们对产品开发有一些很强信条，这些信条与Scrum框架的正确使用并不匹配。 这些信条通常属于处于不同管理级别的人员和从事具体工作的人员。 经常被忽略，很少讨论，因为缺乏谈论这些信条所需的信任。 让情况变得更加困难的是，许多信条根植于企业文化中，因而难以开展工作。\nWhat kinds of beliefs, you ask? Ones that people in management and large organizations have held for a long time. In fact, many of these beliefs are over 100 years old. We won’t bore you with the details, but in 1911, Frederick Winslow Taylor published a study called The Scientific Principles of Management, which resulted in a methodology known as Taylorism. Taylorism is rooted in the idea that we can break tasks into very small, simple steps that can be analyzed, taught, and repeated. The goal was to separate workers’ brains from their hands. In other words, remove the need to think about the work and simply give people small steps to follow to complete a task. With small steps in place, the result is predictability and compliance, not innovation.\n想问是什么信条？ 管理人员和大型组织中的人已经存在了很长时间。 实际上，其中许多信条已有100多年的历史了。 我们不会提供细节，但在1911年，弗雷德里克·温斯洛·泰勒（Frederick Winslow Taylor）发表了一项名为“管理科学原理”的研究，从而得出了一种称为泰勒主义的方法。 泰勒主义植根于这样的观念：我们可以将任务分解为非常小的，简单的步骤，可以对其进行分析，教导和重复。 目的是使工人的大脑与手分开。 换句话说，无需“思考”工作，而只需给人们一些小步骤即可完成任务。 只要采取一些小步骤，结果就是可预测并且合规的，而不是创新。\nTaylorism was designed to solve manufacturing problems that were prevalent in the industrial era (which emphasized repeatable work), and it solved those problems quite well. But when people apply the principles of Taylorism to complex work in the innovation and development space, the results are typically disastrous.\n泰勒主义旨在解决工业时代普遍存在的制造问题（强调可重复的工作），并且很好地解决了这些问题。 但是，当人们将泰勒主义的原理应用于创新和研发领域的复杂工作时，结果通常是灾难性的。\nTaylorism differs dramatically from the Scrum way of doing things. A quick summary of the main beliefs in Scrum and Taylorism is shown in the table.\n泰勒主义与Scrum的做事方式有“戏剧性”上的不同。 下表显示了对Scrum和泰勒主义的主要信条的简要概述。\nTable 1. Taylorism vs. Scrum\n   Taylorism泰勒主意 Scrum Scrum     Workers only know how to do the specific tasks they’ve been assigned; they don’t have or need a big-picture view of what their organization is trying to accomplish and are not encouraged to broaden their skill sets. 工人只知道如何完成分配给他们的特定任务； 他们对自己的组织正在努力实现的目标没有或不需要全面了解，因此不鼓励他们扩大技能范围。 Work is performed by cross-functional teams that have all the skills they need to get the job done. These teams are supported by leadership, and high levels of trust are leveraged between leadership and Scrum teams to make decisions quickly and deliver increments of working software to customers frequently. Workers are encouraged to broaden their skill sets and collaborate. 拥有完成工作所需的所有技能的跨职能团队执行工作。 团队在领导层的支持下，领导层和Scrum团队之间建立了高度信任，可以快速做出决策，并经常向客户交付可工作软件。 鼓励工人扩大技能范围并进行协作。   Managers plan work without input from the people who perform the work. 经理在没有工作人员帮助的情况下计划工作。 Planning happens at varying levels across all the Scrum roles. Management is invited in to inspect the team’s work during sprint reviews and to collaborate with the product owner, so that the team can take management and stakeholder opinions into consideration as they figure out what to do during the next sprint.规划在不同层级进行并涉及所有Scrum角色。 邀请管理层在Sprint评审期间检查团队的工作，并与产品负责人进行协作，以便团队可以在下一次Sprint期间确定做什么之前可以考虑管理层和利益相关者的意见。   Management tries to make the work as predictable as possible by precisely managing resource utilization with exact estimates. 管理层尝试通过精确地估计资源利用率来使工作尽可能可预测。 Scrum teams manage their time and focus as they plan their work. The development team is responsible for resource utilization. They use estimates to trigger conversations within the Scrum team and with management— not to make the work as predictable as possible.Scrum团队在计划工作时会管理时间和精力。 开发团队负责团队资源利用。 他们使用估算来触发Scrum团队内部以及与管理层的沟通，而不是使工作尽可能地可预测。       **Taylorism ** Scrum     Management optimizes workers’ performance using metrics and measurements.管理层使用指标和度量来优化员工的绩效。 Scrum teams use metrics to optimize outcomes that benefit the customer.Scrum团队使用指标来优化产出使客户受益。   Management uses money and rewards as primary motivators for performance. Workers are motivated to achieve rewards and avoid punishment (extrinsic motivation). 管理层将金钱和报酬作为绩效的主要动力。 激励员工获得报酬和避免惩罚（外部动机）。 Scrum team members have a goal they are trying to achieve, the autonomy to achieve it, and a comprehensive set of skills to accomplish their goal. They also have opportunities to learn from each other. Team members are motivated to perform their work because they enjoy what they do and feel a sense of personal accomplishment (intrinsic motivation).Scrum团队成员具有他们要实现的目标，实现目标的自主权以及完成目标的综合技能。 他们也有互相学习的机会。 团队成员执行工作的动机是因为他们喜欢自己所做的事情，并且有个人成就感（内在动力）。    As you can see, Taylorism and Scrum are two very different mindsets. They are basically opposite ways of approaching work. So it’s no surprise that adopting Scrum in an organization that is accustomed to the Taylorism way of doing things can be an uphill battle. Keep this info in mind when you’re trying to bring people in your organization around to the Scrum way of doing things. It’ll help you understand where people’s opposition to Scrum practices comes from.\n可见，泰勒主义和Scrum是两种非常不同的理念。 他们的工作方式基本上是相反的。 因此，在习惯于泰勒主义做事方式的组织中采用Scrum可能是一场艰苦的战斗，这并不奇怪。 当尝试将组织中的人员带向Scrum的方法时，请记住下面的信息。 可以帮助我们理解人们反对Scrum实践的根源。\nWhen Taylorism and Scrum are at odds in your organization, you’ll likely see some of these signs:\n  A mechanical implementation of the Scrum framework without truly embracing its principles and values.\n  Scrum team members view Scrum as just new way to get micromanaged.\n  No meaningful signs of collaboration between Scrum team members.\n  The Scrum team is producing poor-quality increments.\n  People are still being measured by how busy they are, not by the outcomes of their work.\n  The Scrum team is unable to deliver increments of product every sprint.\n  Reverting back to past practices—but calling them by new names.\n  当组织中的泰勒主义和Scrum出现矛盾时，我们可能会看到以下一些现象：\n Scrum框架的机械实现，而没有真正拥抱其原则和价值。 Scrum团队成员把Scrum看做进行微观管理的一个新方法。 Scrum团队成员之间没有有意义的合作。 Scrum团队产生质量较差的增量。 仍在根据人们忙碌程度来衡量工作，而不是根据他们的工作成果来衡量。 Scrum团队无法在每次Sprint中交付增量产品。 恢复到过去的做法，却用新的名称称呼它们。  Keep an eye out for these signs that the old ways of working are still at play in your organization. This book describes a lot of anti- patterns that occur when Taylorism and Scrum compete with each other. Adopting Scrum will require conversations about your company’s culture that will give you an opportunity to create change. Take advantage of those opportunities so you can positively impact your organization and move it more toward the Scrum model, which represents the world we work in today far better than Taylorism does.\n请留意，有这些迹象表明组织中仍在使用旧的工作方式。 本书描述了泰勒主义和Scrum相互竞争时发生的许多反模式。 采用Scrum需要就公司的文化进行对话，这样会有机会进行变革。 利用这些机会，可以对组织产生积极影响，将其进一步推向Scrum模型，Scrum模型远比泰勒主义更好地展现我们今天工作的世界。\nTrust is Missing 信任缺失 Trust is a weird thing: it’s contextual, exists on a spectrum, and is very transactional. Think about your relationships. You trust some people with certain aspects of your life, but not everything. For instance, Todd and Ryan trust each other to work on this book and to co-teach a good class together—but they don’t trust each other to do each other’s laundry. And trust changes over time. It can take a long time to build up trust with someone, and then one misstep can wipe it out.\n信任是一件很奇怪的事情：它是与环境相关的，存在于一定范围内，并且非常具有事务性。 想想你的人际关系。 你会在生活中的某些方面相信某些人，但不是所有事。 例如，托德（Todd）和瑞安（Ryan）互相信任，共同努力写这本书，并一起上好课，但他们不信任对方能洗好自己的洗衣服。 信任随着时间而改变。 与某人建立信任可能需要很长时间，而一旦失误就会完全失去它。\nWhat does trust look like on a Scrum team?\n The product owner trusts the development team to create a done product increment by the end of every sprint. The development team trusts the product owner to provide them with a clear product vision. Development team members trust one another to do their best and support one another. Management trusts the Scrum team and removes any impediments to delivery.  Scrum团队的信任是怎么样的？\n 产品负责人信任开发团队能在每个Sprint结束时创建完成的产品增量。 开发团队信任产品负责人能为他们提供清晰的产品愿景。 开发团队成员彼此信任，以尽最大努力并互相支持。 管理层信任Scrum团队并消除任何阻碍交付的因素。  Without trust, you can’t have transparency. If the members of a Scrum team don’t trust each other or an organization doesn’t trust a Scrum team, then it’s impossible to make the team’s work and progress evident to stakeholders. Instead, people play defense: they blame one another and fail to work as a truly collaborative team.\n没有信任，就不会透明。 如果Scrum团队的成员彼此不信任，或者组织不信任Scrum团队，那么就不可能使利益相关者看到团队的工作和进步。 取而代之的是，人们在防守：他们互相指责，却不能作为一个真正的协作团队在工作。\nWant to quickly make your organization trust your Scrum team? Deliver. We’ve found no better way to build trust than consistently delivering increments of products every sprint.\n想让组织快速信任Scrum团队么？ 交付。 事实证明，没有比在每个Sprint持续交付增量产品更好的建立信任的方法了。\nBut how do you increase the likelihood that a Scrum team can work together smoothly and deliver successfully? Well, other than solving the many anti-patterns in this book, here are a few quick ideas you can try:\n  Shorten your sprint length. Instead of a four-week sprint, try a one-week sprint. The development team will have fewer product backlog items to focus on, the product owner will have stakeholders in the sprint review even more frequently, and collaboration will happen in shorter intervals.\n  Focus sprint planning on setting a sprint goal that has a true impact on the customer. This helps inspire the team and gives them something real to work toward.\n  Use the daily scrum as an opportunity for the development team to inspect their progress toward their sprint goal. Celebrate progress and promote opportunities for Scrum team members to support and help one another. This helps increase trust within the team.\n  Create opportunities for the Scrum team to collaborate with real customers. The sprint review event is perfect for this. Who better to talk about the impact of the team’s work than the people who are actually affected by it?\n  Introduce or reemphasize the importance of the Scrum values. If you and your team keep the Scrum values in mind, then empiricism will shine.\n  然而，如何增加Scrum团队顺利合作并成功交付的可能性？好吧，除了解决本书中的许多反模式之外，还可以尝试以下简单的思路：\n  缩短Sprint长度。请尝试1周的Spint，而不是四周。开发团队专注在更少的产品待办事项上，产品负责人使利益相关者更加频繁参与Sprint评审，协作在更短的时间间隔进行。\n  将Sprint规划的重点放在设定对客户有真正影响的Sprint目标上。这有助于激励团队，并为他们提供切实的工作方向。\n  利用每日Scrum开发团队可以检查其实现Sprint目标的进度。庆祝进展，并为Scrum团队成员创造相互支持和帮助的机会。有助于增加团队内部的信任。\n  为Scrum团队创造与实际客户合作的机会。Sprint评审活动非常适合此操作。有谁会比受着实际影响的人来谈论团队工作产生的影响更好？\n  介绍或重新强调Scrum价值的重要性。如果我们和团队牢记Scrum价值观，那么经验主义将大放异彩。\n  If you see that trust is lacking—either between your Scrum team and the rest of the organization or within the team itself—do everything in your power to find a way to build trust. We offer tips and exercises for doing so throughout the rest of this book. For Scrum to work to its full potential, trust is mandatory.\n如果发现Scrum团队与组织的其余部分之间或团队本身内部缺乏信任，请尽一切力量找到建立信任的方法。 在本书的其余部分，我们提供有关练习和提示。 为了充分发挥Scrum的潜力，信任是必不可少的。\nCoach’s Corner 教练园地 Most big organizational structures are based on Taylorism; something that has been in place for so long takes time to unwind. Scrum has been around for over 20 years, but a lot of large organizations have been around for far longer than that. Even newer organizations likely have employees who are used to the older, pre-Scrum ways of doing things.\n大多数大型组织结构都基于泰勒主义； 已经存在了很长时间的东西需要花费时间来解除。 Scrum已经存在了20多年，但是许多大型组织的存在时间远不止于此。 即使是较新的组织，也有员工可能习惯于旧的，在Scrum之前的工作方式。\nBut change is possible. As a Scrum master, you can unwind old policies and create new ones every day! A great way to figure out where to start (or continue) creating change in your organization is to perform this exercise, which is inspired by the liberating structure, 15% Solutions:\n Gather all the Scrum masters in your organization. Discuss with them how far your organization has come in terms of transitioning to the Scrum way of doing things and how much is still left to do. If it’s helpful, reference the Taylorism vs. Scrum info we presented in this chapter. Have everyone in the group spend five minutes on their own answering the following question: What’s within my control that I can change to get our organization 15% closer to where it needs to be? Put people in groups of two to four, and have each person take three minutes to share their 15% Solution with their group. Make sure that the people who aren’t sharing are actively listening and not giving feedback or advice. Finally, have each team member spend five minutes sharing their idea(s) again—but this time encourage the other team members to ask questions and give feedback to each 15% Solution.  然而，改变是可能的。作为Scrum Master，可以每天解除旧政策并创建新政策！找出组织中从哪里开始（或继续）进行改变的一个好办法就是做以下练习，灵感来自于自由式结构沟通，15％解决方案：\n 集合组织中的所有Scrum Master。 与他们讨论组织在过渡到Scrum的做事方式方面取得了多大的进步，还有多少工作要做。如果有帮助，请参考我们在本章中介绍的泰勒主义与Scrum信息。 小组中的每个人是否都花了五分钟来回答以下问题：在我能力范围内可以做哪些改变，使我们的组织更接近需要的位置15％？ 将人员分成2到4个小组，让每个人花3分钟时间与小组共享15％的解决方案。确保没在分享的人积极倾听，并且不提供反馈或建议。 最后，让每个团队成员花五分钟再次分享他们的想法，但是这次鼓励其他团队成员提出问题，并为每个15％的解决方案提供反馈。  Thinking in terms of 15% Solutions can keep people from feeling overwhelmed. Concentrating on what’s within our control and finding a way to get 15% closer to where we want to be can be a powerful exercise.\n用15％的解决方案思考可以使人们避免不知所措。 专注于我们控制范围内的事情，找到一种方法使距离我们想要的目标更近15％可能是一项有力的练习。\nIn this chapter, we covered some of the old practices that Scrum often competes against in organizations. Next, we’ll delve into how we can break bad Scrum by concentrating on the values and principles that influence behaviors both within a Scrum team and in the wider organization.\n在本章中，我们介绍了Scrum在组织中经常与之竞争的一些旧做法。 接下来，我们将研究如何通过影响Scrum团队内部和整个组织行为的价值观和原则，解决不良的Scrum。\n-- * End of Chapter 2 Why Scrum Goes Bad *--\n","description":"Why Scrum Goes Bad","id":7,"section":"books","tags":null,"title":"为什么Scrum会变质","uri":"https://www.51scrum.com/books/fixing-your-scrum/ch2.-why-scrum-goes-badfixing-your-scrum/"},{"content":"介绍 译者序：本文说到的Scrum面板是一个重要的Scrum工具，是以物理或电子的方式展示当前Sprint范围及其状态。 在Sprint计划期间，当前Sprint计划的产品增量被分解为可执行任务。 Scrum面板主要包含故事及其相关任务，通常也称为任务板。作为以Scrum框架进行的敏捷实践中重要的可视化信息发射源，它在Scrum中被广泛应用。如果对Kanban很熟悉的朋友，这里有一句话：Kanban面板控制团队；而团队控制Scrum面板。阅读本文去品位一下吧。\n正文 Sprint的规划结束于产品负责人和开发团队就Sprint目标达成一致之时。 开发团队预测了他们认为将在此Sprint中交付哪些产品待办事项（PBI）。 生产活动就此开始了。\n开发团队的计划也会体现在sprint 待办列表里，团队成员正以他们认为的最佳方式运用自己的技能完成计划中的任务。并且 随着新的信息在开发过程中不断涌现，开发团队成员也在努力地重新制定相应的计划。\n开发团队可能会集体忽视其构建和开发目标。 团队需要不断地同步其工作，以便根据需要检查和调整计划。 在1896年，一名英国皇家工程师上校首次将“战争迷雾”一词定义为“一种无知的状态：指挥官经常发现自己不仅对敌人，而且对朋友的真实力量和地位一无所知。 ”（ The Fog of War [HM96]）。 通常情况下，并不是信息的匮乏，而是由于迅速变化的战术局势以及大量的各种来源和格式的情报造成了迷雾。 背景噪声会阻止对于事务关键信息的及时聚焦。 信息超载会导致情绪超载，进而导致决策不力。\n将自治团队与军事指挥官的情况进行比较。我们可以根据Sprint目标来定义战略方向，而在较小程度上可以根据开发团队对此Sprint的预测来完成PBI的工作。 PBI通常是实现Sprint目标的业务紧迫性的一种方法，而任务或工作项是实现PBI的战术目标。它们是团队选择的用以完成PBI的途径。开发团队可能会在Sprint backlog工作开始时就规划出这条途径，但是进展让事情越发清晰，从而挫败了所谓的最佳计划。因此，团队必须经常重新考虑他们的战术。没有透明性，具有不同职能背景的人们之间的协作将更加困难。各个开发团队成员需要不断地被提醒，他们的工作与Sprint目标的总体规划如何相关，整个团队需要定期集体关注该目标。因此：创建一个Scrum面板，代表Sprint backlog及其在Sprint期间的进展。开发团队对其进行维护，控制和拥有。将其张贴在所有开发团队成员都可以轻松访问的地方，作为一个信息辐射器。 Scrum面板，又称任务板，通常是墙上的大海报；它将开发任务和其他Sprint待办事项与产品待办事项关联，并将PBI与相应的Sprint目标关联。\n团队现在可以将任务的战术工作状态连同PBI完成状态一起可视化，并且可以使用特定任务状态来确定他们是否仍然进展正常或者是否需要更新工作计划以完成PBI或达到Sprint目标 。 如果团队可以在Sprint Backlog上看到进度，就可以使重新规划变得更加容易。 团队可以与Scrum面板一起发布Sprint目标声明和Sprint燃尽图。\n开发团队共同拥有Scrum面板，并且通常在团队完成Sprint待办事项时才会对其进行更新。不过ScrumMaster可能希望提醒开发团队使Scrum面板时刻保持最新，同时也会帮助开发团队了解Scrum面板上体现的数据的重要性。尤其是当不完整或延迟的开发任务或其他Sprint待办事项可能影响到开发团队而不能实现其预期的工作时，团队可以采取集体行动移除这个障碍。\n简而言之，Scrum面板是行动管理的计划工具，由开发团队拥有和控制，因此，可以帮助建立开发团队真正实现自我管理并形成必要的肌肉记忆。 持续使用Scrum面板可以降低开发人员试图发现其他开发团队成员正在做什么的沟通成本，并降低他们管理各种任务之间的依赖关系的成本。 总而言之，它可以帮助每个人保持集体的注意力。可能的话，最好将每日Scrum安排在Scrum面板周围，这样开发团队可以使用最新信息来创建每日计划。\nScrum没有规定Scrum面板的格式。 由团队来决定呈现所需信息的最佳方法。 所有开发人员都应该有可能作为一个团队一起查看和操纵Scrum面板。 较小的计算机屏幕不太合适，即使屏幕很大，使用键盘或指针设备移动项目也很麻烦。 最好的Scrum面板可以触碰到，并使用简单的“技术”，例如便签或白板。 以下仅描述一个示例：\n 面板是展示矩阵的大海报。卡和便签分别代表PBI和Sprint待办事项。 团队移动便签，以表示进度直至完成。 面板显眼地将“ Sprint目标”显示为命名的状态或解释最终用户如何受益的简短说明。 图表在当前Sprint中的每个PBI都有一行。每个PBI都有一栏；对于Sprint待办事项“待办事项”；对于Sprint待办事项“进行中”；对于完成的Sprint待办事项和完成的PBI是“完成”。 代表PBI的卡片从PBI列开始，只有在完成所有Sprint待办事项且满足“完成”定义的情况下，团队才会将其移动到“完成”列。开发团队成员开始任务时，会将代表它的便笺移动到“进行中”列。当他们完成Sprint待办事项时，便会将其便笺移动到“完成”列，处理该便笺的开发人员现在就可以选择一个新的便笺。 当所有PBI卡都到达“完成”列时，开发团队已达到其预期。 每个Scrum面板的持续时间为Sprint的长度。新的Sprint需要团队创建一个新的Scrum 面板或重置一个现有的Scrum 面板。这个模式是个信息辐射器，与Sprint 燃尽图相关。  不过，尽管表面上有相似之处，不应将Scrum面板与看板面板混淆。 尽管它们都描述了工作项在不同状态下的移动进度，但目的并不相同。 自治团队拥有并控制Scrum面板：但不受面板控制。 它只是一种工具，使团队可以根据需要计划和重新计划如何在Sprint中实现其目标。\n另一方面，看板面板映射了产品或功能的生命周期，从产品开发到产品进入其各种状态（可能有多个团队在此工作），直至团队将功能交付给顾客。每个状态都有与之关联的在制品（WIP）限制。看板的拥护者（在软件开发中；请参见Successful Evolutionary Change for Your Technology Business [And10]）声称，它可视化了一个“拉动”系统，其中每个上游状态仅在下游有可用容量时才将其输出送到下一个下游状态。不过，看板不要求团队具有跨职能或自我管理的能力。由谁来控制面板及设置在制品限制都是开放的。在这种情况下，命令与控制的管理人员可以通过设置任意WIP限制并迫使开发人员发挥完全的能力，将看板板转变为“推送”系统。相比之下，在Scrum中，自我管理的开发团队通过逐个Sprint从产品Backlog的顶部拉出PBI，并通过集群战术来完成每一个Sprint待办事项。\n最后一点：外行通常将“做Scrum”等同于使用Scrum面板。 尽管Scrum面板是Scrum组织中最引人注目的工具之一（另一个是每日Scrum），不过Scrum所拥有的功能远远超出任何一套工具所能捕捉到的。 打个比方，在公园里踢几脚足球看起来很像在踢足球，其实不是在正儿八经的踢足球。 该模式参考了许多其他模式，这些模式代表了Scrum框架的关键组成部分，但它们也仅仅是一个起点。\n精选内容访问 捷伴行Agile","description":"","id":8,"section":"blog","tags":["agile","scrum board","scrum","interesting","translation"],"title":"Scrum面板","uri":"https://www.51scrum.com/blog/scrum-board/"},{"content":"介绍  By Mark Levison\nPosted on January 29, 2019Posted on January 29, 2019\n我经常在研讨会上被问到：“我们在哪里不应该使用Scrum？” 精简的回答是，在很多情况下Scrum框架都不适合。 但是，要对这个问题给出更完整和有效的回答，首先，我们需要知道Scrum为什么和什么时候有效以及成功的关键条件是什么。 然后，我们可以拿出不适合的示例。\n Scrum在哪里适用？ Scrum是一种工具，用于建立能够成功应对不断变化的业务环境的自治，自组织，高绩效团队和组织。 人们通常选择使用Scrum的原因，是因为他们想要更高的质量或更快的速度，而不明白这其实是高绩效团队的成果，而不是Scrum本身。\nScrum已在各行各业的团队中得到有效利用，包括软件开发（其成长起来的行业），硬件开发，制造，市场营销，人力资源…甚至战斗机和天然气厂设计！ 这些截然不同的行业的共同点是它们依赖一种知识工作形式，这可以被理解为主要涉及的非常规问题解决的工作，而这些问题通常需要创造性思维。 知识工作得益于协作，这是Scrum团队的主要重点，因此Scrum非常适合这些行业也就不足为奇了。\n由于团队是Scrum的核心工作单位，因此Scrum的许多局限性源于组织的团队结构。\nScrum良好运行的关键条件 现在了解Scrum在哪里有效，我们可以考虑在给定的工作环境中Scrum正常运行需要哪些结构基础。\n知识工作–看起来似乎显而易见，但值得说明的是：组织（包括大多数零售和服务行业）基于日常任务的执行而无需执行复杂的问题解决或创造性思维，就不会从使用Scrum框架中受益。\n共同目标–一群人只有在有共同目标时才成为一个“团队”。 在软件开发中，共同的目标来自产品愿景和策略。 在营销团队中，这可能以品牌策略或营销活动计划的形式出现。 无论从事哪个行业，这个目标必须使所有团队成员的工作团结在一起，比他们各自的做出的贡献更重要。 没有一个共同的目标，就没有真正的凝聚力团队，凝聚力是关键。\n足够的挑战–与“共同目标”并驾齐驱的是问题必须具有足够的挑战性，以至于人们独自一人无法完成工作。 如果人们可以在不与他人互动的情况下工作并且仍然实现自己的目标，那么他们通常会选择这样做。 问题的难度必须保证使用团队，否则Scrum只是不必要的开销而已。\n专注的团队成员关系–在许多场合下多任务处理的成本已显而易见，并且不再像从前那样被视为一种理想的技能。指派人员到一个以上的团队中工作会迫使他们执行多项任务，从而降低他们的生产力。任何形式的多任务处理都会使人们减少产能。将他们分配给多个团队是最糟糕的事情。由于他们从一种工作环境切换到另一种环境时的延误和重新集中精力的消耗而降低了他们的产能，并且团队在等待该人员投入工作前将遇到瓶颈。最终，犯错误的数量将增加，部分原因是这些人切换环境时候会忘记关键细节。证据表明，人员专注在一个团队（只有一个团队）会使所有相关团队的吞吐量提高一倍。没有专注的团队成员关系，所有群体注定会降低生产力，而真正的团队（还不算指高绩效团队）就永远不会成立。在这种环境下，Scrum将受到极大的束缚。\n稳定的团队成员关系–有效的团队需要时间才能组建。 新团队需要6到8个月的时间才能形成真正有效的凝聚力。 此外，每次成员变更时，团队的生产力都会暂时下降。 几个月后，他们可能会恢复实力，甚至可能最终有所提高，但是有些团队永远都无法恢复。 在团队成员频繁更换的情况下，团队将始终处于较低的绩效水平。\n较低的变更成本–敏捷的时代已来临，因为软件变更的成本已大大降低。 多年来的许多工作都集中在进一步降低进行变更的成本上-从持续集成和测试驱动开发，到DevOps和行为驱动开发。 现代软件开发工作中的变更成本不是零，但比绿色屏幕和大型机要低得多。 为了使任何口味的敏捷都能在新环境中取得成功，降低变更成本（甚至是在后期）必须成为重中之重。 如果进行变更，在工作中会产生大量成本，那么敏捷/ Scrum就不太实用了。\n可计划的– Scrum团队通常以两周的Sprint进行工作，因此他们需要至少能够提前计划那么长时间的工作并允许进行小的更改。 例如，一个软件开发团队拥有足够的灵活性，可以在sprint中期解决一个生产支持问题，而不会影响Sprint的主要工作。 营销团队可以根据收到的有关客户行为的新数据来调整其营销活动。 实际的限制是至少有一半的团队工作是可计划的。 整个业务模式都是为了响应不可预测的客户需求的公司，如果使用Scrum来组织未来的工作，无法从中受益。 注意：在维修行业之外，很少有企业能够在纯粹的基于响应的业务上长期生存。\n被赋权的–团队只有在团队成员感到自治的情况下才能组建。 Scrum通过将团队建立为自组织的方式明确了这一点。 希望这绝不是缺少的关键条件，但是，如果确实如此，尝试应用Scrum并不会帮助团队变得自组织和高效，但可能会暴露出问题，因此可以先解决此问题，然后再继续进行。\n跨技能是可能的– Scrum（和看板团队）通过共享技能消除瓶颈，直到多个团队成员始终能够解决延迟。 瓶颈是实现高性能的根本上重要的障碍，组织最终必须解决它们。 丰田的方法是向人们支付更多报酬，以便能够处理多个工作站。 在医疗保健领域，有些司法管辖区开始通过允许以前仅由医生完成的某些工作现在由护士或执业护士来解决此问题。 同时，在某些工作环境中，由于法规，法律或根本不同的技能领域（例如，艺术家和金属工人），跨技能的适用性或价值可能受到限制，Scrum的价值也受到限制。\n早期交付和测试–在Scrum中，我们不认为对用户需求的期望是正确的。 相反，我们希望尽早交付产品并收集反馈。 我们在产品发现而非创造的方式中工作。 在无法在每个Sprint结束时交付有效产品的环境中，我们无法收集反馈。 解决方案是在每个Sprint的末尾找到要展示的内容并获得反馈。\n一起办公–将所有团队成员都放在同一房间仍然是最佳选择。 人类已经经历了数百万年的面对面互动，因此这仍然是组建协作团队的最佳方法。 尽管远程工作和分布式团队目前在许多企业中很流行，但这些所带来的挑战却是巨大的，并导致高性能团队需要更长的成长时间。 如果绝对不可避免地要采用分布式的团队，则应用Scrum做法（例如每日站立）将更具挑战性，需要适应过程。 在分散的团队中仍然可以有效地实践Scrum –只是难度要大得多。\nScrum应用不理想的例子 因此，既然我们了解了Scrum的工作原理以及成功的条件，以下我们的排序是从Scrum最不可能提供帮助的团队到虽有挑战性但仍然可以受益的团队。\n建筑施工–当一个团队负责浇筑混凝土或铺路时，变更的成本实际上就是工程成本。 总体而言，敏捷方法仍然可以使用，但是会增加成本。 考虑精益建设，帝国大厦和伦敦碎片是这类方法的例子。\n服务台和维修服务–组织中的人员提供数字或基于电话的支持服务时，他们的工作确实涉及“知识工作”的关键条件，但这完全是由中断引起的。 他们可以开始处理一个问题，但是当打来的电话涉及到更重要的问题时，他们必须进行切换。 这种模式在一天中可能会重复多次。 这不符合“可计划的”条件，因此Scrum在这种情况下将无效。 考虑使用其他工具（例如看板）来改善通过任何系统的流程。 这也可能适用于其他组织和服务-基本上在知识是主要要求但工作不可计划的任何地方。\n后台操作–许多组织都有从事所有后台工作的小组，例如财务和其他相关部门。 其中大部分工作（发票，费用跟踪和其他簿记工作）都是由独立工作的个人有效完成的。 尽管这项工作是基于知识的，但它通常是重复性的，因此不会具有挑战性。 这些小组通常缺乏清晰的愿景或共同目标。 我们仍然考虑使用看板而不是Scrum，作为更好地了解这些小组内部工作流程的工具。\n基础架构和技术–大多数组织还拥有配置笔记本电脑，服务器，安全性，网络，防火墙和其他技术基础架构的人员。 与后勤工作相比，这项知识工作没有那么重复，而且更具挑战性，并且它可以从协作中受益，因为问题通常需要多个技能来解决。 这些小组通常也有一个共同目标（例如，保持内部用户的生产力和安全性）。 但是在许多情况下，他们的计划外工作超出了计划内工作。 但是，Scrum可以通过关注团队的计划外工作量，从而帮助他们投入工作以减少这些工作。\n现有的商业应用–组织经常将许多后端软件（例如Gmail，QuickBooks，Expensify）外包给云供应商。这很好，不过最终，会有足够多的应用程序需要偶尔更改（新用户，新记帐规则等）。这些应用程序都不需要一全职个人来维护，因此最终可能需要6-7个人来维护10-15个单独的应用程序。缺乏明确的共同目标，该小组不太可能成为一个团队。 Scrum可以工作，但价值可能有限。对于基础架构和团队而言，挑战在于他们的知识可能会分散，因为人们没有理由学习另一位团队成员所在的领域。无论团队选择Scrum，看板还是其他框架，这将仍然是一个问题。考虑问问该小组是否可以重组以创建一个可能实现共同目标的空间。另一种选择是，团队可以根据自己的情况来制定目标。这些灵感来自与Petri Heiramo的对话：\n鉴于他们工作的“产品”显然不足以团结他们，因此讨论需要转移到比他们正在做的工作更伟大的事情上。 他们想成为有史以来最好的支持团队吗？ 他们愿意有一半的时间做自己想做的事情吗？ 他们是否想不用做他们的工作，并尝试使其尽可能自动化？ 他们是否知道自己正在改善别人的生活，他们是否可以为此目的制定一些有价值的目标？\n一种可能是问他们工作的快乐程度。如果他们不快乐，那么下一个问题可能是他们愿意努力使自己快乐。毕竟，他们的三个主要选择是：1）继续做自己在做的事情，并仍然不快乐； 2）做一些使自己更快乐，为自己的工作感到自豪的事情，或3）离开公司去做其他事情。显然，3是不理想的，也不是一个很好的起点，因此选择实际上应该在1到2之间。然后下一步是问他们是什么使他们对工作感到高兴和自豪，是什么使他们对工作感到不快乐和羞愧。这可以帮助他们建立共同的目标，使他们变得更快乐，并找到纠正措施的起点。可能会讨论如何衡量幸福和自豪感（即如何知道他们正在朝着自己的目标迈进）。只要他们在工作上取得了一些引以为傲的具体进展，他们可能会达成一些自我奖励的约定（例如星期五的啤酒），进展可以是：\n 消除最深层的信息瓶颈，那些能让他们在休假的时候还要带着工作压力的阻碍。 清除他们最严重的技术问题。 使脾气暴躁的客户对其团队/服务感到满意甚至高兴。 建立一些新的实践来提高生产率或减少反馈周期。  单独的工作-任何没有合作前景的业务问题（每个人或公司都孤立工作），也不会直接从Scrum中受益。 毕竟，没有团队可以成长。 在这种情况下，请考虑“个人敏捷”和“个人看板”。\n团队成员分布在多个团队，没有稳定的成员关系– 这让我无法想象能有一个理想的业务环境。 如果是这种情况，Scrum能非常有效地工作以突出组织上的障碍，但不会帮助解决问题。 在每个研讨会中，我们都讨论Scrum是发现问题的工具这一事实。 从长远来看，当组织认真对待去解决Scrum发现的此类问题（而不仅仅是管理它们）时，Scrum就能成功。\n我们对Scrum的应用会有不少限制，但是它们比大多数人想象的要广泛得多。\n感谢Petri Heiramo为现有商业应用维护团队提供的建议和远见卓识。\n原文链接：https://agilepainrelief.com/blog/what-are-the-limits-of-the-scrum-framework.html\n精选内容访问 捷伴行Agile","description":"","id":9,"section":"blog","tags":["agile","scrum","interesting","translation"],"title":"Scrum框架的局限性在哪里？","uri":"https://www.51scrum.com/blog/where-scrum-limits/"},{"content":" 流行但愚蠢的态度是，一个好的经理在任何地方都可以成为一个好经理，而不需要对他所管理的生产过程有特别的了解。\n—爱德华.戴明\n 前言 孔子说：一日而三省吾身。应该说是体现了敏捷思维在个人哲学意识迭代中的最早的实践应用。但真的要做到，确实有点难。改成三日一省如何？至少三天才能对一件事情有比较客观的初步认知。每次反思就像Scrum框架里的一个Sprint，总要有个时间盒子，结束后能看到增量价值交付。这里就不接着谈Kanban了，敏捷方法不是今天的主题。该反思的还是要反思，但不用太频繁。\n说说翻译 偶尔会做些敏捷行业外文的翻译，一方面借此提升自己的行业英语水平，另一方面对行业的知识通过翻译的形式，加深自己的理解并促进工作实践。师夷长技以制夷，这里谈不上“制”，只为提升自我。\n很多人听到翻译，觉得现在应该挺简单，有谷歌翻译。不排除每个人的背景不同，本业余人士的个人理解是，一篇专业的翻译文章需要至少经历以下几个步骤：\n第一步 谷歌翻译，当今社会效率至上，让人工智能解放人类的一部分时间。把译文的基本的框架涂鸦出来，当然，这个版本往往是惨不忍睹，你懂的。很快能完成。\n1  难度指数：1颗星   第二步 专业翻译，译者需要有较长时间的专业知识沉淀，理解和实践经验，结合领域专有思维。如同本文开头，戴明说的那句话。例如，agile在英语中是形容词“敏捷的”，可自从本世纪初有了大写A的Agile，这个词就成了一个专有名词，敏捷宣言的“敏捷”，成为了软件开发行业甚至日后的各大行业中更先进的理念。对每个行业来讲都是一样的，专业的事情交给专业的人。\n1  难度指数：5颗星   第三步 共情翻译，译者需要通过文字与优秀的作者共同感受。需要点虚拟穿越的想象力，进入作者在写作那一刻的环境，思想和情绪等，翻译出来冰冷的文字，也是知识，但无法把作者的情感传达给读者。例如，something must not become stale，简单翻译：某事一定不能太久，结合上下文，感受作者的心情和中文的习惯，或许可以这么翻译：我们一定不能把某事拖太久。\n1  难度指数：4颗星   第四步 文化翻译，结合中华5000年的文化特点。让浑厚的中华文明来给文章润色，这就是好好学习语文和历史的好处了，也可以经常这么教育孩子。 翻译时，我们可以考虑用成语，这是中文的很特别的地方。例如，Empty List，直接翻译就是 “空的清单”。总觉得这么翻译太干，有时候可以结合上下文，翻译成“空空如也的清单”也许就更朗朗上口。\n1  难度指数：3颗星   第五步 通读三遍，调整标点符号，段落，错别字等。文字能简单就简单，字数越少越好。首先自己觉得顺畅，标准是，把自己当成读者。帮读者易于理解，节省阅读时间，是作者和译者共同的责任，接着就可以把译文传递到下一步。\n1  难度指数：3颗星   第六步 专家审校，最后，译文由优秀的行业专家的审校是很重要的，颇有些XP中结对编程的味道，结对翻译？一个人总是难免出错，考虑不周，有同行专家的审校总是让人心里踏实很多。\n1  难度指数：4颗星   写在最后 即便经历了前面六个步骤，要告诉自己的是，译文一定还有改进的空间，能够翻译的更好，这也是敏捷人的共同思维模式。不过，翻译工作该交的时候还是要交，从完成到完美的过程永远不会结束，所以，完成比完美更重要。优秀的翻译文章和书籍都凝聚了相关行业专家心血和对行业长期投入而获得的领悟，除此，还需要足够的文学，历史，哲学等方面的知识。\n保持社交距离。勤洗手。 —\nEND\n精选内容访问 捷伴行Agile","description":"","id":10,"section":"blog","tags":["agile","scrum","interesting","translation"],"title":"翻译英文的敏捷行业专业文章，不只是谷歌翻译","uri":"https://www.51scrum.com/blog/translation-beyond-google/"},{"content":"介绍 敏捷障碍清单\n别名：障碍待办事项\nScrum团队致力于在产品上取得进展。团队成员会经常遇到阻碍他们前进的问题。要在当时就解决这些问题也许并不可行，不太实际或者从组织或团队的角度也并不是最有价值的。\n内部或外部事件可能会减缓开发团队的工作进度。团队成员也许想立即解决问题，不过这会在我们通往Sprint目标过程中投入很多精力。\n另一方面，如果不立即解决这些障碍，就可能从急性问题变成慢性问题，久而久之，这些问题变得可以被接受，或者说在某种程度上被忽略了。\n障碍通常会妨碍开发团队的日常工作，它也可能会降低团队绩效。比如，团队互动如果有问题就会阻碍我们的工作取得足够的进展，同样，运行速度慢或过时的设备可能会妨碍团队发挥他们的最佳状态。\n1 2 3 4  敏捷障碍清单 别名：障碍待办事项   因此： 通过敏捷的障碍清单(待办事项)使得所有重要的问题可视化，将它们提报给组织中合适的人来解决。ScrumMaster根据严重程度和价值相对的不同对这个清单里的条目进行排序。\n任何Scrum团队成员都可以在列表中添加障碍使它可视化，能这么做的前提是这个Scrum团队是一个信任社区，因为有些障碍不太容易说出口，例如与健康，家庭状况或团队冲突有关的个人障碍。 团队成员应该能够向ScrumMaster倾诉这类障碍。考虑到团队中每个人的尊严问题，ScrumMaster可以时不时分散地解决一些相关的障碍。\n开发团队成员自己可以解决障碍清单中的大多数条目，他们也可能会从Scrum团队之外的其他人那里获得帮助。 ScrumMaster也许亲自处理一些障碍，否则这些障碍会成为团队其他成员的烦心事，况且还不需要他们的专业知识就可以解决。也可以换种做法，开发团队可以和产品负责人一起把用于解决障碍的具体工作添加到产品待办事项中。\n另外，在Sprint回顾会议期间，Scrum团队可能会在清单中添加新的障碍。 这也是完善障碍清单的绝佳的时机。\n障碍清单是改善(Kaizen)意识的体现。空空如也的障碍清单说明团队还没有足够努力地去寻找改进的方法，（“没有问题就是最大的问题”）。另一方面，团队必须及时解决障碍，否则，改进就停止了。清单上的障碍一定不能拖太久。\n真实的故事： 一个团队抱怨他们的经理没有为他们消除障碍。我问，经理是否知道有什么障碍，他们说他们“认为”他知道。于是，我让团队在荧光便笺上写上障碍条目，并在顶部写上并加粗了“阻碍”一词，然后拿去给经理。当时他不在位置上，我把它们贴在他的显示器周围，这样他肯定能看到。半个小时后，他叫着我的名字来找我。他过来问我这些是否是团队碰到的阻碍。我说：是的。他笑着说我这么做很好，他现在终于知道自己需要做什么了。\n精选内容访问 捷伴行Agile","description":"","id":11,"section":"blog","tags":["agile","impediment","scrum","interesting","translation"],"title":"敏捷障碍清单","uri":"https://www.51scrum.com/blog/impediment-list-backlog/"},{"content":"捷伴行Agile - Agile makes us better 促进敏捷文化在软件领域传播，并在广泛领域有趣创新\n  捷伴行Agile博客，捷伴行Agile www.agilewalker.com\n  99%的文字，捷伴行Thought www.51scrum.com\n  敏捷外文干货，捷伴行Spreader www.agilespreader.com\n  给我留言，点这里\n  欢迎微信公众号，有更多敏捷文化和Python软件开发相关话题\n关于我们\n","description":"","id":12,"section":"","tags":null,"title":"About","uri":"https://www.51scrum.com/about/"},{"content":"Lorem est tota propiore conpellat pectoribus de\npectora summo. Redit teque digerit hominumque toris verebor lumina non cervice\nsubde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc\ncaluere tempus\nThis article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\n Headings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae.\nNote that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item  First Sub-item Second Sub-item    Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. \u0026#x21a9;\u0026#xfe0e;\n  ","description":"","id":13,"section":"blog","tags":["markdown","css","html","themes"],"title":"Markdown Syntax Guide","uri":"https://www.51scrum.com/blog/markdown-syntax/"},{"content":"Lorem est tota propiore conpellat pectoribus de\npectora summo. Redit teque digerit hominumque toris verebor lumina non cervice\nsubde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc\ncaluere tempus\nHugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\n Instagram Simple Shortcode YouTube Privacy Enhanced Shortcode Twitter Simple Shortcode Vimeo Simple Shortcode","description":"","id":14,"section":"blog","tags":["shortcodes","privacy"],"title":"Rich Content","uri":"https://www.51scrum.com/blog/rich-content/"},{"content":"Lorem est tota propiore conpellat pectoribus de\npectora summo. Redit teque digerit hominumque toris verebor lumina non cervice\nsubde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc\ncaluere tempus\ninhospita parcite confusaque translucet patri vestro qui optatis\nlumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\n Exierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude  Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus\nsilentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria\ntractus malis.\n Comas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et  Vagus elidunt \nThe Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra\ndicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere\nfurit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli\nLelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare\nEchionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert\nausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae\nvulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem\nPropoetides parte.\n","description":"","id":15,"section":"blog","tags":["markdown","text"],"title":"Placeholder Text","uri":"https://www.51scrum.com/blog/placeholder-text/"},{"content":"Lorem est tota propiore conpellat pectoribus de\npectora summo. Redit teque digerit hominumque toris verebor lumina non cervice\nsubde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc\ncaluere tempus\nEmoji can be enabled in a Hugo project in a number of ways.\n The emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site’s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 🙈 🙉 🙉 🙊 🙊\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3  .emoji { font-family: Apple Color Emoji,Segoe UI Emoji,NotoColorEmoji,Segoe UI Symbol,Android Emoji,EmojiSymbols; }  ","description":"","id":16,"section":"blog","tags":["emoji"],"title":"Emoji Support","uri":"https://www.51scrum.com/blog/emoji-support/"}]